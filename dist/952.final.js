"use strict";(self.webpackChunkprimera_entrega=self.webpackChunkprimera_entrega||[]).push([[952],{6952:(t,r,e)=>{e.d(r,{default:()=>a});var s=e(7444),o=e(8749);class a{constructor(){this.model=s.A,this.modelProduct=o.B}getProductsFromCartId=async t=>{try{let r=await this.model.findById(t).populate("products.product").lean();return r?{statusCode:200,response:{status:"success",payload:r}}:{statusCode:404,response:{status:"error",error:"Cart was not found"}}}catch(t){return{statusCode:500,response:{status:"error",error:"Cart was not found"}}}};getAll=async t=>await this.getProductsFromCartId(t);delete=async t=>{try{let r=await this.model.findById(t).lean();return r.products=[],{statusCode:200,response:{status:"success",payload:await this.model.findByIdAndUpdate(t,r,{Document:"after"}).lean()}}}catch(r){return{statusCode:500,response:{status:"error",error:`Cart ${t} was not found`}}}};update=async(t,r)=>{try{let e,s=await this.model.findById(t).lean();if(null===s)return{statusCode:404,response:{status:"error",error:`Cart "${t}" was not found`}};if(!r)return{statusCode:400,response:{status:"error",error:"Products is required"}};e=r;for(const t of e){if(!t.hasOwnProperty("product")||!t.hasOwnProperty("quantity"))return{statusCode:400,response:{status:"error",error:"The properties ID or Quantity are not valid"}};if(0===t.quantity)return{statusCode:400,response:{status:"error",error:"Quantity cant be 0"}};if("number"!=typeof t.quantity)return{statusCode:400,response:{status:"error",error:"Quantity must be a Number"}};if(null===await this.modelProduct.findById(t.product).lean())return{statusCode:400,response:{status:"error",error:`Product with ID: ${t.product} was not found`}}}return s.products=e,await this.model.findByIdAndUpdate(t,s,{Document:"after"}),s=await this.model.findById(t).lean(),{statusCode:200,response:{status:"success",payload:s.products}}}catch(t){return{statusCode:500,response:{status:"error",payload:t}}}};create=async()=>{try{return{statusCode:201,response:{status:"success",payload:await this.model.create({})}}}catch(t){return{statusCode:500,response:{status:"error",error:t.message}}}};addProductToCart=async(t,r)=>{try{let e=await this.model.findById(t).lean();if(null===e)return{statusCode:400,response:{status:"error",error:`El carrito "${t}" no fue encontrado`}};let s=await this.modelProduct.findById(r).lean();if(null===s)return{statusCode:400,response:{status:"error",error:`El producto "${r}" no fue encontrado`}};if(0===s.stock)return{statusCode:400,response:{status:"error",error:"El producto no tiene stock disponible"}};let o=1;if(s={product:s,quantity:o},null===o)return{statusCode:400,response:{status:"error",error:"Especifique la cantidad para agregar"}};let a=e.products.findIndex((t=>t.product._id==r));if(a>=0){const t=e.products[a].quantity+o;if(t>s.product.stock)return{statusCode:400,response:{status:"error",error:"No hay suficiente stock para agregar mÃ¡s unidades"}};e.products[a].quantity=t}else e.products.push(s);return await this.model.findByIdAndUpdate(t,e,{Document:"after"}),e=await this.model.findById(t).lean(),{statusCode:200,response:{status:"success",payload:e}}}catch(t){return{statusCode:500,response:{status:"error",error:t.message}}}};deleteProductFromCart=async(t,r)=>{try{let e=await this.model.findById(t).lean();return null===e?{statusCode:400,response:{status:"error",error:`Cart "${t}" was not found`}}:null===await this.modelProduct.findById(r).lean()?{statusCode:404,response:{status:"error",error:`Product "${r}" does not exist`}}:e.products.find((t=>t.product.toString()===r))?(e.products=e.products.filter((t=>t.product.toString()!==r)),e.products?(await this.model.findByIdAndUpdate(t,e,{Document:"after"}),e=await this.model.findById(t).lean(),{statusCode:200,response:{status:"success",payload:e}}):{statusCode:400,response:{status:"error",error:`Product "${r}" in cart ${t} was not found`}}):{statusCode:404,response:{status:"error",error:`Product "${r}" was not found in cart "${t}"`}}}catch(t){return{statusCode:500,response:{status:"error",payload:t.message}}}};updateProductFromCart=async(t,r,e)=>{try{let s=await this.model.findById(t).lean();if(null===s||!s)return{statusCode:400,response:{status:"error",error:`Cart "${t}" was not found`}};if(!await this.modelProduct.findById(r).lean())return{statusCode:400,response:{status:"error",error:`Product with ID "${r}" was not found`}};let o=s.products.findIndex((t=>t.product.toString()===r));if(o<0)return{statusCode:400,response:{status:"error",error:`Product "${r}" in cart ${t} was not found`}};let a=e;if(0===a)return{statusCode:400,response:{status:"error",error:"Quantity value cant be 0"}};if(!a)return{statusCode:400,response:{status:"error",error:"Quantity value is a required field"}};if("number"!=typeof a)return{statusCode:400,response:{status:"error",error:"Quantity must be a number"}};s.products[o].quantity=a;let u=await this.model.findByIdAndUpdate(t,s,{Document:"after"}).lean();return s=await this.model.findById(t).lean(),u?{statusCode:200,response:{status:"success",payload:s}}:{statusCode:400,response:{status:"error",error:"Cart could not be updated"}}}catch(t){return{statusCode:500,response:{status:"error",payload:t}}}}}},8749:(t,r,e)=>{e.d(r,{B:()=>u});var s=e(6037),o=e(2124);const a=new s.Schema({title:{type:String,required:!0},description:{type:String,required:!0},price:{type:Number,required:!0},code:{type:String,unique:!0,required:!0},stock:{type:Number,required:!0},category:{type:String,required:!0},thumbnail:{type:[String],default:[]},owner:{type:String,required:!0,default:"admin",ref:"users"}});a.plugin(o);const u=s.model("products",a)}}]);