"use strict";(self.webpackChunkprimera_entrega=self.webpackChunkprimera_entrega||[]).push([[763],{8763:(e,s,r)=>{r.d(s,{default:()=>i});var a=r(721),t=r(2899),o=r(1572),n=r(855);class u{constructor(e){this.name=`${e.first_name} ${e.last_name}`,this.email=e.email,this.role=e.role}}class i{constructor(){this.model=a.A}getAll=async()=>{try{let e=await this.model.find().lean(),s=[];if(e){for(let r=0;r<e.length;r++){const a=new u(e[r]);s.push(a)}return{statusCode:200,response:{status:"success",payload:s}}}return{statusCode:404,response:{status:"error",error:"No se encontraron los usuarios"}}}catch(e){return{statusCode:500,response:{status:"error",error:"No se pudieron obtener los usuarios"}}}};delete=async()=>{try{const e=await this.model.find().lean();let s=[];const r={service:"gmail",auth:{user:n.A.nodemailer_user,pass:n.A.nodemailer_pass}},a=o.createTransport(r);if(!e)return{statusCode:404,response:{status:"error",error:"No se encontraron los usuarios"}};for(let r=0;r<e.length;r++){const o=e[r],u=o.last_login;if((new Date-u)/6e4>=2880){await this.model.deleteOne(o._id),s.push(o.email),t.A.info(`El usuario ${o.email} ha sido eliminado por estar inactivo más de 2 días`);let e={from:n.A.nodemailer_user,to:o.email,subject:"[ elem Shop ] Mensje de aviso!!",html:"<h1>[ IMPORTANTE! ] eleM | Tienda de ropa online</h1>\n                        <hr />\n                        <h2> Nos contactamos con usted para informarle que la cuenta ha sido de baja por inactividad! </h2>\n                        <h3> Si usted desea volver a ingresar a la web, por favor vuelva a registrarse!</h3>\n                        <p> Tenga presente que si la cuenta se encuentra inactiva por más de 2 días, se eliminará del sistema.\n                        <br>\n                        <hr />\n                        <br>\n                        <br>\n                        Saludos,<br><strong>Equipo de eleM Uruguay.</strong>"};await a.sendMail(e)}}return{statusCode:200,response:{status:"success",payload:s.length>0?`Los usuarios eliminados por inactividad fueron  ${s}`:"No se eliminó ningún usuario!"}}}catch(e){return{statusCode:500,response:{status:"error",error:e.message}}}};deleteOne=async e=>{try{return await a.A.findOneAndDelete({email:e}),t.A.info(`El usuario ${e} fue borrado correctamente`),{statusCode:200,response:{status:"success",error:`El usuario ${e} fue borrado correctamente`}}}catch(s){return{statusCode:500,response:{status:"error",error:`No se pudo borrar el usuario ${e}`}}}};updateRol=async(e,s)=>{try{return await a.A.findOneAndUpdate({email:e},{role:s}),console.log(s),t.A.info(`El usuario ${e} fue actualizado correctamente, nuevo rol: ${s}`),{statusCode:200,response:{status:"success",error:`El usuario ${e} fue actualizado correctamente, nuevo rol: ${s}`}}}catch(s){return{statusCode:500,response:{status:"error",error:`No se pudo actualizar el usuario: ${e}`}}}};getOne=async e=>{try{let s=await this.model.findOne({email:e});return s=new u(s),s?{statusCode:200,response:{status:"success",payload:s}}:{statusCode:404,response:{status:"error",error:"No se encontró el usuario"}}}catch(e){return{statusCode:500,response:{status:"error",error:"No se pudo encontrar al usuario deseado!"}}}}}}}]);